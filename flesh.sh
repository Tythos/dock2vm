#!/bin/bash

# 0. Preparing working environment...
echo 0. Preparing working environment...
sudo apt update
sudo apt -y install extlinux fdisk qemu-utils

# 1. Capturing image filesystem in TAR archive...
echo 1. Capturing image filesystem in TAR archive...
docker build -t dock2vm .
CID=$(docker run -d dock2vm /bin/true)
docker export -o dock2vm.tar ${CID}

# 2. Extracting filesystem to mount folder...
echo 2. Extracting filesystem to mount folder...
mkdir -p ./os
tar --numeric-owner --directory=./os -xf ./dock2vm.tar

# 3. Creating disk image with partition...
echo 3. Creating disk image...
VM_DISK_SIZE_SECTOR=2097152 # 1gb, in 512-byte blocks
dd if=/dev/zero of=dock2vm.img bs=${VM_DISK_SIZE_SECTOR} count=512
echo "type=83,bootable" | sfdisk dock2vm.img

# 4. Formatting filesystem within parition...
echo 4. Formatting filesystem within parition...
LOOPDEVICE=$(losetup -f)
losetup -o $(expr 512 \* 2048) ${LOOPDEVICE} dock2vm.img
mkfs.ext4 ${LOOPDEVICE}

# 5. Copying filesystem to new partition...
echo 5. Copying filesystem to new partition...
mkdir -p ./mnt
sudo mount -t auto ${LOOPDEVICE} ./mnt
sudo cp -a ./os/. ./mnt

# 6. Setting up bootloader...
echo 6. Setting up bootloader...
extlinux --install ./mnt/boot
cp syslinux.cfg ./mnt/boot/syslinux.cfg
rm ./mnt/.dockerenv

# 7. Unmounting and writing master boot record...
echo 7. Unmounting and writing master boot record...
sudo umount ./mnt
losetup -d ${LOOPDEVICE}
dd if=/usr/lib/syslinux/mbr/mbr.bin of=dock2vm.img bs=440 count=1 conv=notrunc
